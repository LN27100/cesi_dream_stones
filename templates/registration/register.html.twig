<!DOCTYPE html>
<html lang="fr">

	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>Inscription Dream Stones</title>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer"/>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
		<link href="{{ asset('assets/styles/app.css') }}" rel="stylesheet">

	</head>

	<body>
		<header>
			{% block header %}
				{% include 'includes/header.php' %}
			{% endblock %}
		</header>

		<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
			<div class="offcanvas-header">
				<h5 class="offcanvas-title text-light" id="offcanvasExampleLabel">Votre panier</h5>
				<button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
			</div>
			<!-- PANIER COTE -->
			<div id="cart">
				<div class="product border border-light d-flex" data-id="1">
					<div class="offcanvas-body">
						<div>
							<div class="row">
								<div class="col-md-6">
									<div id="cartItems"></div>
									<p class="text-light">Total : €<span id="cartTotal">0.00</span>
									</p>
								</div>
							</div>
						</div>
						<form id="orderForm" action="{{ path('confirm_order') }}" method="post">
							<input type="hidden" name="action" value="view_order">
							<input type="hidden" name="product_ids" id="productIds">
							<button type="submit" class="btn2">Commander</button>
						</form>
					</div>
				</div>
			</div>
		</div>

		<div class="containerReg">
			{% block content %}
				<div class="card">
					<h1>Formulaire d'inscription</h1>
					<div class="card-body">
						<form id="registration-form" action="{{ path('inscription') }}" method="post">
							{{ form_start(form) }}
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.name, {'attr': {'class': 'form-control'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="name-error" class="text-danger"></p>
							</div>
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.firstname, {'attr': {'class': 'form-control'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="firstname-error" class="text-danger"></p>
							</div>
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.pseudo, {'attr': {'class': 'form-control', 'autocomplete': 'username'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="pseudo-error" class="text-danger"></p>
							</div>
							<div class="mb-1 input-group d-flex justify-content-center">
								{{ form_row(form.email, {'attr': {'class': 'form-control', 'autocomplete': 'email'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="email-error" class="text-danger"></p>
							</div>
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.password.first, {'attr': {'class': 'form-control', 'autocomplete': 'new-password'}, 'required': true}) }}
								<span class="required-label">*</span>
							</div>
							<p id="password-error" class="text-danger"></p>
							<div class="password-conditions">
								<div class="condition">Au moins 8 caractères</div>
								<div class="condition">Au moins une lettre minuscule</div>
								<div class="condition">Au moins une lettre majuscule</div>
								<div class="condition">Au moins un chiffre</div>
								<div class="condition">Au moins un caractère spécial</div>
							</div>

							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.password.second, {'attr': {'class': 'form-control', 'autocomplete': 'new-password'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="password-confirm-error" class="text-danger"></p>
							</div>
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.streetName, {'attr': {'class': 'form-control'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="streetName-error" class="text-danger"></p>
							</div>
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.additionalAddress, {'attr': {'class': 'form-control'}}) }}
								<p id="additionalAddress-error" class="text-danger"></p>
							</div>
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.zipcode, {'attr': {'class': 'form-control'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="zipcode-error" class="text-danger"></p>
							</div>
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.city, {'attr': {'class': 'form-control'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="city-error" class="text-danger"></p>
							</div>
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.phone, {'attr': {'class': 'form-control'}, 'required': true}) }}
								<span class="required-label">*</span>
								<p id="phone-error" class="text-danger"></p>
							</div>

							<div
								class="mb-3 input-group d-flex justify-content-center">
								<!-- Champs pour accepter les CGV -->
								<div class="form-check">
									<input class="form-check-input" type="checkbox" name="cgv" id="cgv-accept" required>
									<label class="form-check-label" for="cgv-accept">
										J'accepte les conditions générales de vente
									</label>
								</div>
								<span class="required-label">*</span>
								<p id="cgv-error" class="text-danger"></p>
							</div>
							<!-- Bouton de soumission -->
							<div class="mb-3 input-group d-flex justify-content-center">
								{{ form_row(form.submit, {'attr': {'class': 'btn2'}}) }}
							</div>
							{{ form_end(form) }}
						</form>
					</div>
				</div>
			{% endblock %}
		</div>


		<footer>
			{% block footer %}
				{% include 'includes/footer.php' %}
			{% endblock %}
		</footer>


		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
		<script src="{{ asset('assets/js/script.js') }}"></script>

		<script>
			// Contrôles des champs d'inscription
document.addEventListener('DOMContentLoaded', function () {
const form = document.getElementById('registration-form');

form.addEventListener('submit', function (event) {
const requiredInputs = form.querySelectorAll('input[required]');
let hasError = false;

requiredInputs.forEach(function (input) {
if (! input.value.trim()) {
const errorElement = document.getElementById(`${
input.id
}-error`);
errorElement.textContent = "Champ obligatoire";
hasError = true;
}
});

// Vérification de la correspondance des mots de passe
const passwordField = document.getElementById('registration_password_first');
const confirmPasswordField = document.getElementById('registration_password_second');
const passwordConfirmError = document.getElementById('password-confirm-error');
const password = passwordField.value;
const confirmPassword = confirmPasswordField.value;
if (confirmPassword.length > 0) {
if (password !== confirmPassword) {
passwordConfirmError.textContent = "Les mots de passe ne correspondent pas";
passwordConfirmError.classList.remove('text-success');
passwordConfirmError.classList.add('text-danger');
hasError = true;
} else {
passwordConfirmError.textContent = "Mots de passe identiques";
passwordConfirmError.classList.remove('text-danger');
passwordConfirmError.classList.add('text-success');
}
}

if (hasError) {
event.preventDefault();
}
});

// Contrôles du mot de passe
const passwordField = document.getElementById('registration_password_first');
const passwordConditions = document.querySelector('.password-conditions');

// Affiche les conditions de mot de passe lors du clic sur le champ de mot de passe
passwordField.addEventListener('click', function () {
passwordConditions.classList.toggle('visible');
});

// Vérifie les conditions de mot de passe lors de la saisie
passwordField.addEventListener('input', function () {
const password = this.value;
const hasMinimumLength = password.length >= 8;
const hasLowerCase = /[a-z]/.test(password);
const hasUpperCase = /[A-Z]/.test(password);
const hasNumber = /\d/.test(password);
const hasSpecialChar = /[!@#$%^&*()_+]/.test(password);

// Met à jour les classes des conditions de mot de passe quand remplies
const conditions = passwordConditions.querySelectorAll('.condition');
conditions[0].classList.toggle('condition-passed', hasMinimumLength);
conditions[1].classList.toggle('condition-passed', hasLowerCase);
conditions[2].classList.toggle('condition-passed', hasUpperCase);
conditions[3].classList.toggle('condition-passed', hasNumber);
conditions[4].classList.toggle('condition-passed', hasSpecialChar);
});

// Validation du champ nom
// \u00C0-\u024F accepte les lettres avec accents.
const nameField = document.getElementById('registration_name');
nameField.addEventListener('blur', function () {
const nameValue = this.value.trim();
const nameError = document.getElementById('name-error');
if (!/^[a-zA-Z\u00C0-\u024F-]+$/.test(nameValue)) {
nameError.textContent = "Le nom ne peut contenir que des lettres et des tirets";
} else {
nameError.textContent = "";
}
});

// Validation du champ prénom
const firstnameField = document.getElementById('registration_firstname');
firstnameField.addEventListener('blur', function () {
const firstnameValue = this.value.trim();
const firstnameError = document.getElementById('firstname-error');
if (!/^[a-zA-Z\u00C0-\u024F-]+$/.test(firstnameValue)) {
firstnameError.textContent = "Le prénom ne peut contenir que des lettres et des tirets";
} else {
firstnameError.textContent = "";
}
});

// Validation du champ email
const emailField = document.getElementById('registration_email');
emailField.addEventListener('blur', function () {
const emailValue = this.value.trim();
const emailError = document.getElementById('email-error');
const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
if (! emailRegex.test(emailValue)) {
emailError.textContent = "L'adresse email est invalide";
} else {
emailError.textContent = "";
}
});

// Validation du champ code postal
const zipcodeField = document.getElementById('registration_zipcode');
zipcodeField.addEventListener('blur', function () {
const zipcodeValue = this.value.trim();
const zipcodeError = document.getElementById('zipcode-error');
if (!/^\d+$/.test(zipcodeValue)) {
zipcodeError.textContent = "Le code postal ne peut contenir que des chiffres";
} else {
zipcodeError.textContent = "";
}
});

// Validation du champ ville
const cityField = document.getElementById('registration_city');
cityField.addEventListener('blur', function () {
const cityValue = this.value.trim();
const cityError = document.getElementById('city-error');
if (!/^[a-zA-Z\u00C0-\u024F-]+$/.test(cityValue)) {
cityError.textContent = "Le nom de la ville ne peut contenir que des lettres et des tirets";
} else {
cityError.textContent = "";
}
});

// Validation du champ téléphone
const phoneField = document.getElementById('registration_phone');
phoneField.addEventListener('blur', function () {
const phoneValue = this.value.trim();
const phoneError = document.getElementById('phone-error');
if (!/^\d+$/.test(phoneValue)) {
phoneError.textContent = "Le numéro de téléphone ne peut contenir que des chiffres";
} else {
phoneError.textContent = "";
}
});
});

 document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('registration-form');
        const cgvAccept = document.getElementById('cgv-accept');
        const cgvError = document.getElementById('cgv-error');

        form.addEventListener('submit', function (event) {
            // Vérifie si les CGV sont acceptées
            if (!cgvAccept.checked) {
                cgvError.textContent = "Vous devez accepter les conditions générales de vente";
                event.preventDefault();
            }
        });

        // Réinitialise le message d'erreur des CGV lorsque le bouton radio est coché
        cgvAccept.addEventListener('change', function () {
            if (cgvAccept.checked) {
                cgvError.textContent = "";
            }
        });
    });

		</script>

	</body>

</html>


{# NOTES #}

{# emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/
[a-zA-Z0-9._%+-]+ : Correspond à la partie locale de l'adresse e-mail, qui peut contenir des lettres (majuscules et minuscules), des chiffres, et certains caractères spéciaux tels que le point, le tiret bas, le pourcentage, le signe plus et le tiret.
@ : Correspond simplement au caractère "@".
[a-zA-Z0-9.-]+ : Correspond au domaine de l'adresse e-mail, qui peut également contenir des lettres (majuscules et minuscules), des chiffres, et certains caractères spéciaux tels que le point et le tiret.
\. : Correspond à un point.
[a-zA-Z]{2,} : Correspond à l'extension du domaine, qui doit avoir au moins deux lettres (majuscules et minuscules). #}
